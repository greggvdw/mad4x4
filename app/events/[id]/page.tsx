import { supabaseServer } from '../../../lib/supabase';import Link from 'next/link';export default async function EventDetail({params}:{params:{id:string}}){const s=supabaseServer();const {data:event}=await s.from('events').select('*').eq('id',params.id).single();if(!event) return <div><p>Event not found.</p></div>;const {data:regs}=await s.from('registrations').select('status').eq('event_id',event.id);const registered=(regs||[]).filter((r:any)=>r.status==='registered').length;const waitlisted=(regs||[]).filter((r:any)=>r.status==='waitlisted').length;const cap=event.capacity||null;const spotsLeft=cap?Math.max(cap-registered,0):null;return (<div><h1>{event.title}</h1><p>{new Date(event.start_time).toLocaleString()} @ {event.location||'TBA'}</p><p>Type: {event.event_type||'trip'}{cap?` · Capacity: ${cap}`:''}</p><p>{event.description}</p><div className="card"><p>Registered: {registered}{cap?` / ${cap}`:''} · Waitlist: {waitlisted}</p>{spotsLeft!==null && spotsLeft<=0 ? <p>⚠️ Event is full — new registrations will join the waitlist automatically.</p> : null}<form action={`/api/events/${event.id}/register`} method="post"><button className="btn" type="submit">Register</button></form></div><div className="card" style={{marginTop:'1rem'}}><h3>Sign-on Form</h3><p>All drivers must complete a sign-on before departure.</p><Link className="btn" href={`/signon/${event.id}`}>Fill sign-on form</Link></div><p style={{marginTop:'1rem'}}><Link href="/events">Back to events</Link></p></div>);}